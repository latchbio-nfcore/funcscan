
from dataclasses import dataclass
import typing
import typing_extensions

from flytekit.core.annotation import FlyteAnnotation

from latch.types.metadata import NextflowParameter
from latch.types.file import LatchFile
from latch.types.directory import LatchDir, LatchOutputDir

# Import these into your `__init__.py` file:
#
# from .parameters import generated_parameters

generated_parameters = {
    'input': NextflowParameter(
        type=LatchFile,
        default=None,
        section_title='Input/output options',
        description='Path to comma-separated file containing information sample names and paths to corresponding FASTA files.',
    ),
    'outdir': NextflowParameter(
        type=typing_extensions.Annotated[LatchDir, FlyteAnnotation({'output': True})],
        default=None,
        section_title=None,
        description='The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.',
    ),
    'email': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Email address for completion summary.',
    ),
    'multiqc_title': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='MultiQC report title. Printed as page header, used for filename if not otherwise specified.',
    ),
    'run_amp_screening': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Screening Type Activation',
        description='Activate antimicrobial peptide screening tools.',
    ),
    'run_arg_screening': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate antimicrobial resistance gene screening tools.',
    ),
    'run_bgc_screening': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate biosynthetic gene cluster screening tools.',
    ),
    'annotation_tool': NextflowParameter(
        type=typing.Optional[str],
        default='pyrodigal',
        section_title='Annotation',
        description='Specify which annotation tool to use for some downstream tools.',
    ),
    'save_annotations': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specify whether to save gene annotations in the results directory.',
    ),
    'annotation_bakta_db_localpath': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Annotation: BAKTA',
        description='Specify a path to BAKTA database.',
    ),
    'annotation_bakta_db_downloadtype': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Download full or light version of the Bakta database if not supplying own database.',
    ),
    'annotation_bakta_mincontiglen': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Specify the minimum contig size.',
    ),
    'annotation_bakta_translationtable': NextflowParameter(
        type=typing.Optional[int],
        default=11,
        section_title=None,
        description='Specify the genetic code translation table.',
    ),
    'annotation_bakta_gram': NextflowParameter(
        type=typing.Optional[str],
        default='?',
        section_title=None,
        description='Specify the type of bacteria to be annotated to detect signaling peptides.',
    ),
    'annotation_bakta_complete': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specify that all contigs are complete replicons.',
    ),
    'annotation_bakta_renamecontigheaders': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Changes the original contig headers.',
    ),
    'annotation_bakta_compliant': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Clean the result annotations to standardise them to Genbank/ENA conventions.',
    ),
    'annotation_bakta_trna': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate tRNA detection & annotation.',
    ),
    'annotation_bakta_tmrna': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate tmRNA detection & annotation.',
    ),
    'annotation_bakta_rrna': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate rRNA detection & annotation.',
    ),
    'annotation_bakta_ncrna': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate ncRNA detection & annotation.',
    ),
    'annotation_bakta_ncrnaregion': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate ncRNA region detection & annotation.',
    ),
    'annotation_bakta_crispr': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate CRISPR array detection & annotation.',
    ),
    'annotation_bakta_skipcds': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip CDS detection & annotation.',
    ),
    'annotation_bakta_pseudo': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate pseudogene detection & annotation.',
    ),
    'annotation_bakta_skipsorf': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip sORF detection & annotation.',
    ),
    'annotation_bakta_gap': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate gap detection & annotation.',
    ),
    'annotation_bakta_ori': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate oriC/oriT detection & annotation.',
    ),
    'annotation_bakta_activate_plot': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Activate generation of circular genome plots.',
    ),
    'annotation_prokka_singlemode': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Annotation: Prokka',
        description='Use the default genome-length optimised mode (rather than the metagenome mode).',
    ),
    'annotation_prokka_rawproduct': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Suppress the default clean-up of the gene annotations.',
    ),
    'annotation_prokka_kingdom': NextflowParameter(
        type=typing.Optional[str],
        default='Bacteria',
        section_title=None,
        description='Specify the kingdom that the input represents.',
    ),
    'annotation_prokka_gcode': NextflowParameter(
        type=typing.Optional[int],
        default=11,
        section_title=None,
        description='Specify the translation table used to annotate the sequences.',
    ),
    'annotation_prokka_mincontiglen': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Minimum contig size required for annotation (bp).',
    ),
    'annotation_prokka_evalue': NextflowParameter(
        type=typing.Optional[float],
        default=1e-06,
        section_title=None,
        description='Minimum e-value cut-off.',
    ),
    'annotation_prokka_coverage': NextflowParameter(
        type=typing.Optional[int],
        default=80,
        section_title=None,
        description='Set the assigned minimum coverage.',
    ),
    'annotation_prokka_cdsrnaolap': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Allow transfer RNA (trRNA) to overlap coding sequences (CDS).',
    ),
    'annotation_prokka_rnammer': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Use RNAmmer for rRNA prediction.',
    ),
    'annotation_prokka_compliant': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Force contig name to Genbank/ENA/DDJB naming rules.',
    ),
    'annotation_prokka_addgenes': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Add the gene features for each CDS hit.',
    ),
    'annotation_prokka_retaincontigheaders': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Retains contig names.',
    ),
    'annotation_prodigal_singlemode': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Annotation: Prodigal',
        description="Specify whether to use Prodigal's single-genome mode for long sequences.",
    ),
    'annotation_prodigal_closed': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Does not allow partial genes on contig edges.',
    ),
    'annotation_prodigal_transtable': NextflowParameter(
        type=typing.Optional[int],
        default=11,
        section_title=None,
        description='Specifies the translation table used for gene annotation.',
    ),
    'annotation_prodigal_forcenonsd': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Forces Prodigal to scan for motifs.',
    ),
    'annotation_pyrodigal_singlemode': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Annotation: Pyrodigal',
        description="Specify whether to use Pyrodigal's single-genome mode for long sequences.",
    ),
    'annotation_pyrodigal_closed': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Does not allow partial genes on contig edges.',
    ),
    'annotation_pyrodigal_transtable': NextflowParameter(
        type=typing.Optional[int],
        default=11,
        section_title=None,
        description='Specifies the translation table used for gene annotation.',
    ),
    'annotation_pyrodigal_forcenonsd': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Forces Pyrodigal to scan for motifs.',
    ),
    'save_databases': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Database downloading options',
        description='Specify whether to save pipeline-downloaded databases in your results directory.',
    ),
    'amp_skip_amplify': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='AMP: AMPlify',
        description='Skip AMPlify during AMP-screening.',
    ),
    'amp_skip_ampir': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='AMP: ampir',
        description='Skip AMPir during AMP-screening.',
    ),
    'amp_ampir_model': NextflowParameter(
        type=typing.Optional[str],
        default='precursor',
        section_title=None,
        description='Specify which machine learning classification model to use.',
    ),
    'amp_ampir_minlength': NextflowParameter(
        type=typing.Optional[int],
        default=10,
        section_title=None,
        description='Specify minimum protein length for prediction calculation.',
    ),
    'amp_skip_hmmsearch': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='AMP: HMMSearch',
        description='Skip HMMsearch during AMP-screening.',
    ),
    'amp_hmmsearch_models': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify path to the AMP hmm model file(s) to search against. Must have quotes if wildcard used.',
    ),
    'amp_hmmsearch_savealignments': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Saves a multiple alignment of all significant hits to a file.',
    ),
    'amp_hmmsearch_savetargets': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save a simple tabular file summarising the per-target output.',
    ),
    'amp_hmmsearch_savedomains': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save a simple tabular file summarising the per-domain output.',
    ),
    'amp_skip_macrel': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='AMP: Macrel',
        description='Skip Macrel during AMP-screening.',
    ),
    'amp_ampcombi_db': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='AMP: AMPcombi',
        description='Path to AMPcombi reference database directory (DRAMP).',
    ),
    'amp_ampcombi_cutoff': NextflowParameter(
        type=typing.Optional[float],
        default=0.4,
        section_title=None,
        description='Specify probability cutoff to filter AMPs',
    ),
    'arg_skip_amrfinderplus': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='ARG: AMRFinderPlus',
        description='Skip AMRFinderPlus during the ARG-screening.',
    ),
    'arg_amrfinderplus_db': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify the path to a local version of the ARMfinderPlus database.',
    ),
    'arg_amrfinderplus_identmin': NextflowParameter(
        type=typing.Optional[float],
        default=-1,
        section_title=None,
        description='Minimum percent identity to reference sequence.',
    ),
    'arg_amrfinderplus_coveragemin': NextflowParameter(
        type=typing.Optional[float],
        default=0.5,
        section_title=None,
        description='Minimum coverage of the reference protein.',
    ),
    'arg_amrfinderplus_translationtable': NextflowParameter(
        type=typing.Optional[int],
        default=11,
        section_title=None,
        description='Specify which NCBI genetic code to use for translated BLAST.',
    ),
    'arg_amrfinderplus_plus': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Add the plus genes to the report.',
    ),
    'arg_amrfinderplus_name': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Add identified column to AMRFinderPlus output.',
    ),
    'arg_skip_deeparg': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='ARG: DeepARG',
        description='Skip DeepARG during the ARG-screening.',
    ),
    'arg_deeparg_data': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify the path to the DeepARG database.',
    ),
    'arg_deeparg_data_version': NextflowParameter(
        type=typing.Optional[int],
        default=2,
        section_title=None,
        description='Specify the numeric version number of a user supplied DeepaRG database.',
    ),
    'arg_deeparg_model': NextflowParameter(
        type=typing.Optional[str],
        default='LS',
        section_title=None,
        description='Specify which model to use (short or long sequences).',
    ),
    'arg_deeparg_minprob': NextflowParameter(
        type=typing.Optional[float],
        default=0.8,
        section_title=None,
        description='Specify minimum probability cutoff under which hits are discarded.',
    ),
    'arg_deeparg_alignmentevalue': NextflowParameter(
        type=typing.Optional[float],
        default=1e-10,
        section_title=None,
        description='Specify E-value cutoff under which hits are discarded.',
    ),
    'arg_deeparg_alignmentidentity': NextflowParameter(
        type=typing.Optional[int],
        default=50,
        section_title=None,
        description='Specify percent identity cutoff for sequence alignment under which hits are discarded.',
    ),
    'arg_deeparg_alignmentoverlap': NextflowParameter(
        type=typing.Optional[float],
        default=0.8,
        section_title=None,
        description='Specify alignment read overlap.',
    ),
    'arg_deeparg_numalignmentsperentry': NextflowParameter(
        type=typing.Optional[int],
        default=1000,
        section_title=None,
        description='Specify minimum number of alignments per entry for DIAMOND step of DeepARG.',
    ),
    'arg_skip_fargene': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='ARG: fARGene',
        description='Skip fARGene during the ARG-screening.',
    ),
    'arg_fargene_hmmmodel': NextflowParameter(
        type=typing.Optional[str],
        default='class_a,class_b_1_2,class_b_3,class_c,class_d_1,class_d_2,qnr,tet_efflux,tet_rpg,tet_enzyme',
        section_title=None,
        description='Specify comma-separated list of which pre-defined HMM models to screen against',
    ),
    'arg_fargene_savetmpfiles': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specify to save intermediate temporary files to results directory.',
    ),
    'arg_fargene_score': NextflowParameter(
        type=typing.Optional[float],
        default=None,
        section_title=None,
        description='The threshold score for a sequence to be classified as a (almost) complete gene.',
    ),
    'arg_fargene_minorflength': NextflowParameter(
        type=typing.Optional[int],
        default=90,
        section_title=None,
        description='The minimum length of a predicted ORF retrieved from annotating the nucleotide sequences.',
    ),
    'arg_fargene_orffinder': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Defines which ORF finding algorithm to use.',
    ),
    'arg_fargene_translationformat': NextflowParameter(
        type=typing.Optional[str],
        default='pearson',
        section_title=None,
        description='The translation table/format to use for sequence annotation.',
    ),
    'arg_skip_rgi': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='ARG: RGI',
        description='Skip RGI during the ARG-screening.',
    ),
    'arg_rgi_savejson': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save RGI output .json file.',
    ),
    'arg_rgi_savetmpfiles': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Specify to save intermediate temporary files the results directory.',
    ),
    'arg_rgi_alignmenttool': NextflowParameter(
        type=typing.Optional[str],
        default='BLAST',
        section_title=None,
        description='Specify the alignment tool to be used.',
    ),
    'arg_rgi_includeloose': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Include all of loose, strict and perfect hits (i.e. >=95% identity) found by RGI.',
    ),
    'arg_rgi_excludenudge': NextflowParameter(
        type=typing.Optional[bool],
        default=True,
        section_title=None,
        description='Suppresses the default behaviour of RGI with `--arg_rgi_includeloose`.',
    ),
    'arg_rgi_lowquality': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Include screening of low quality contigs for partial genes.',
    ),
    'arg_rgi_data': NextflowParameter(
        type=typing.Optional[str],
        default='NA',
        section_title=None,
        description='Specify a more specific data-type of input (e.g. plasmid, chromosome)',
    ),
    'arg_skip_abricate': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='ARG: ABRicate',
        description='Skip ABRicate during the ARG-screening.',
    ),
    'arg_abricate_db': NextflowParameter(
        type=typing.Optional[str],
        default='ncbi',
        section_title=None,
        description='Specify which of the provided public databases to use by ABRicate.',
    ),
    'arg_abricate_minid': NextflowParameter(
        type=typing.Optional[int],
        default=80,
        section_title=None,
        description='Minimum percent identity of alignment required for a hit to be considered.',
    ),
    'arg_abricate_mincov': NextflowParameter(
        type=typing.Optional[int],
        default=80,
        section_title=None,
        description='Minimum percent coverage of alignment required for a hit to be considered.',
    ),
    'bgc_skip_antismash': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='BGC: antiSMASH',
        description='Skip antiSMASH during the BGC screening',
    ),
    'bgc_antismash_databases': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to user-defined local antiSMASH database.',
    ),
    'bgc_antismash_installationdirectory': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to user-defined local antiSMASH directory. Only required when running with docker/singularity.',
    ),
    'bgc_antismash_sampleminlength': NextflowParameter(
        type=typing.Optional[int],
        default=1000,
        section_title=None,
        description='Minimum longest-contig length a sample must have to be screened with antiSMASH.',
    ),
    'bgc_antismash_contigminlength': NextflowParameter(
        type=typing.Optional[int],
        default=1000,
        section_title=None,
        description='Minimum length a contig must have to be screened with antiSMASH.',
    ),
    'bgc_antismash_cbgeneral': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on clusterblast comparison against database of antiSMASH-predicted clusters.',
    ),
    'bgc_antismash_cbknownclusters': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on clusterblast comparison against known gene clusters from the MIBiG database.',
    ),
    'bgc_antismash_cbsubclusters': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on clusterblast comparison against known subclusters responsible for synthesising precursors.',
    ),
    'bgc_antismash_ccmibig': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Turn on ClusterCompare comparison against known gene clusters from the MIBiG database.',
    ),
    'bgc_antismash_smcogtrees': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Generate phylogenetic trees of secondary metabolite group orthologs.',
    ),
    'bgc_antismash_hmmdetectionstrictness': NextflowParameter(
        type=typing.Optional[str],
        default='relaxed',
        section_title=None,
        description='Defines which level of strictness to use for HMM-based cluster detection',
    ),
    'bgc_antismash_taxon': NextflowParameter(
        type=typing.Optional[str],
        default='bacteria',
        section_title=None,
        description='Specify which taxonomic classification of input sequence to use',
    ),
    'bgc_skip_deepbgc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='BGC: deepBGC',
        description='Skip deepBGC during the BGC screening.',
    ),
    'bgc_deepbgc_database': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to local deepBGC database folder.',
    ),
    'bgc_deepbgc_score': NextflowParameter(
        type=typing.Optional[float],
        default=0.5,
        section_title=None,
        description='Average protein-wise DeepBGC score threshold for extracting BGC regions from Pfam sequences.',
    ),
    'bgc_deepbgc_prodigalsinglemode': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Run DeepBGC's internal Prodigal step in `single` mode to restrict detecting genes to long contigs",
    ),
    'bgc_deepbgc_mergemaxproteingap': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Merge detected BGCs within given number of proteins.',
    ),
    'bgc_deepbgc_mergemaxnuclgap': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Merge detected BGCs within given number of nucleotides.',
    ),
    'bgc_deepbgc_minnucl': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Minimum BGC nucleotide length.',
    ),
    'bgc_deepbgc_minproteins': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Minimum number of proteins in a BGC.',
    ),
    'bgc_deepbgc_mindomains': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Minimum number of protein domains in a BGC.',
    ),
    'bgc_deepbgc_minbiodomains': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Minimum number of known biosynthetic (as defined by antiSMASH) protein domains in a BGC.',
    ),
    'bgc_deepbgc_classifierscore': NextflowParameter(
        type=typing.Optional[float],
        default=0.5,
        section_title=None,
        description='DeepBGC classification score threshold for assigning classes to BGCs.',
    ),
    'bgc_skip_gecco': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='BGC: gecco',
        description='Skip GECCO during the BGC screening.',
    ),
    'bgc_gecco_mask': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Enable unknown region masking to prevent genes from stretching across unknown nucleotides.',
    ),
    'bgc_gecco_cds': NextflowParameter(
        type=typing.Optional[int],
        default=3,
        section_title=None,
        description='The minimum number of coding sequences a valid cluster must contain.',
    ),
    'bgc_gecco_pfilter': NextflowParameter(
        type=typing.Optional[float],
        default=1e-09,
        section_title=None,
        description='The p-value cutoff for protein domains to be included.',
    ),
    'bgc_gecco_threshold': NextflowParameter(
        type=typing.Optional[float],
        default=0.8,
        section_title=None,
        description='The probability threshold for cluster detection.',
    ),
    'bgc_gecco_edgedistance': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='The minimum number of annotated genes that must separate a cluster from the edge.',
    ),
    'bgc_skip_hmmsearch': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='BGC: HMMSearch',
        description='Skip HMMsearch during BGC-screening.',
    ),
    'bgc_hmmsearch_models': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Specify path to the BGC hmm model file(s) to search against. Must have quotes if wildcard used.',
    ),
    'bgc_hmmsearch_savealignments': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Saves a multiple alignment of all significant hits to a file.',
    ),
    'bgc_hmmsearch_savetargets': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save a simple tabular file summarising the per-target output.',
    ),
    'bgc_hmmsearch_savedomains': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Save a simple tabular file summarising the per-domain output.',
    ),
    'arg_hamronization_summarizeformat': NextflowParameter(
        type=typing.Optional[str],
        default='tsv',
        section_title='Reporting',
        description='Specifies summary output format',
    ),
    'multiqc_methods_description': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Generic options',
        description='Custom MultiQC yaml file containing HTML including a methods description.',
    ),
}

